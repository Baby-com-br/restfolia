{"name":"Restfolia","body":"# Restfolia: a REST client to consume and interact with Hypermedia API.\r\n\r\n## Description\r\n\r\nRestfolia is a REST client and it's main goal is help you **consume and interact** with Hypermedia APIs.\r\n\r\nAgainst the grain, Restfolia is very opinionated about some REST's concepts:\r\n\r\n* Aims only **JSON Media Type**.\r\n* All responses are parsed and returned as Restfolia::Resource.\r\n* Less is more. Restfolia is very proud to be small, easy to maintain and evolve. You can compare Restfolia's code with \"Similar Projects\" at page's bottom.\r\n* Restfolia::Resource is Ruby object with attributes from JSON and can optionally contains **hypermedia links** which have to be a specific format. See the examples below.\r\n* All code is very well documented, using [TomDoc](http://tomdoc.org style).\r\n\r\nObs: This is a draft version. Not ready for production (yet!).\r\n\r\n## References\r\n\r\nYou can find more information about arquitecture REST below:\r\n\r\n* [Roy Fielding's](http://roy.gbiv.com/untangled) see this post for example: [REST APIs must be hypertext-driven](http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven).\r\n* [Rest in Practice](http://restinpractice.com), especially the chapter titled \"Hypermedia Formats\".\r\n* [Mike Amundsen's Blog](http://amundsen.com/blog)\r\n* ROAR - [Resource Oriented Arquitectures in Ruby](https://github.com/apotonick/roar) it seems really good to build a hypermedia API, of course you can go with Sinatra+rabl solutions too.\r\n\r\n## Examples of use\r\n\r\n```js\r\n// GET http://localhost:9292/recursos/busca\r\n{ \"itens_por_pagina\" : 10,\r\n  \"paginal_atual\" : 1,\r\n  \"paginas_totais\" : 1,\r\n  \"query\" : \"\",\r\n  \"total_resultado\" : 100,\r\n  \"resultado\" : [ { \"id\" : 1,\r\n                    \"name\" : \"Test1\",\r\n                    \"links\" : [ { \"href\" : \"http://localhost:9292/recursos/id/1\",\r\n                          \"rel\" : \"recurso\",\r\n                          \"type\" : \"application/json\"\r\n                    } ]\r\n                  },\r\n                  { \"id\" : 2,\r\n                    \"name\" : \"Test2\",\r\n                    \"links\" : [ { \"href\" : \"http://localhost:9292/recursos/id/2\",\r\n                          \"rel\" : \"recurso\",\r\n                          \"type\" : \"application/json\"\r\n                    } ]\r\n                  }\r\n                ],\r\n  \"links\" : { \"href\" : \"http://localhost:9292/recursos/busca\",\r\n      \"rel\" : \"self\",\r\n      \"type\" : \"application/json\"\r\n    },\r\n}\r\n```\r\n\r\n```js\r\n// GET http://localhost:9292/recursos/id/1\r\n{ \"id\"    : 1,\r\n  \"name\"  : \"Test1\",\r\n  \"links\" : { \"href\" : \"http://localhost:9292/recursos/id/1\",\r\n              \"rel\" : \"self\",\r\n              \"type\" : \"application/json\"\r\n            }\r\n}\r\n```\r\n\r\n```ruby\r\n# getting a resource\r\nresource = Restfolia.at('http://localhost:9292/recursos/busca').get\r\nresource.pagina_atual  # => 1\r\nresource.resultado  # => [#<Resource ...>, #<Resource ...>]\r\n\r\n# example of hypermedia navigation\r\nr1 = resource.resultado.first\r\nr1 = r1.links(\"recurso\").get  # => #<Resource ...>\r\nr1.name  # => \"Test1\"\r\n```\r\n\r\n## Similar Projects\r\n\r\n* [ROAR](https://github.com/apotonick/roar)\r\n* [Leadlight](https://github.com/avdi/leadlight)\r\n* [Frenetic](https://github.com/dlindahl/frenetic)\r\n* [Restfulie](https://github.com/caelum/restfulie)\r\n\r\n## What is \"folia\"?\r\n\r\nFolia is a portuguese word and a simple translation in English can be:\r\n\r\n> sf merry-making, merriment, revelry. que folia! what a fun!\r\n\r\n## License\r\n\r\nRestfolia is copyright 2012 Roger Leite and contributors. It is licensed under the MIT license. See the include MIT-LICENSE file for details.\r\n\r\n","tagline":"REST client to consume and interact with Hypermedia APIs","google":"UA-31047367-1","note":"Don't delete this file! It's used internally to help with page regeneration."}